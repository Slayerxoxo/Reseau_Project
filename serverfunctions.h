#ifndef _SERVER_FUNCTIONS_H_
#define _SERVER_FUNCTIONS_H_

#include <SFML/System.h>
#include "types.h"

/////////////////////////////////////////////////////////////////////
/// Cherche une partie prête à accueillir un nouveau joueur
///	Renvoie l'indice (entre 0 et MAX_ROOM_NUMBER) d'une partie manquant de joueurs, ou d'une nouvelle partie si toutes les actuelles sont complètes
///	Retourne -1 en cas d'impossibilité de créer une nouvelle partie
///
/// \return L'indice de la partie recherchée
///
////////////////////////////////////////////////////////////////////
int findRoom();

/////////////////////////////////////////////////////////////////////
/// Crée une partie vierge
///
/// \return La partie créée
///
////////////////////////////////////////////////////////////////////
Game* createRoom();

/////////////////////////////////////////////////////////////////////
/// Remet à zéro une partie donnée
///
////////////////////////////////////////////////////////////////////
void resetRoom(int roomIndex);

/////////////////////////////////////////////////////////////////////
/// Crée un nouveau houeur
///
/// \param number Le numéro du joueur
/// \return Le joueur créé
///
////////////////////////////////////////////////////////////////////
Player* createPlayer(int number);

////////////////////////////////////////////////////////////////////
/// Gère le déroulement d'une partie du jeu
///
/// \param roomIndex L'index du tableau contenant la partie à gérer. Un int* est attendu
///
////////////////////////////////////////////////////////////////////
void handleGame(void* roomIndex);

////////////////////////////////////////////////////////////////////
/// Ajoute un joueur à une partie
///
/// \param roomIndex L'index du tableau contenant la partie à laquelle ajouter un joueur
///
////////////////////////////////////////////////////////////////////
void addPlayer(int roomIndex, sfIPAddress clientAdr);

////////////////////////////////////////////////////////////////////
/// Génère une chaine de caractères décrivant un joueur
///
/// \param player Le joueur à décrire
///
////////////////////////////////////////////////////////////////////
char* playerToString(Player player);

////////////////////////////////////////////////////////////////////
/// Génère une chaine de caractères décrivant une partie
///
/// \param game La partie à décrire
///
////////////////////////////////////////////////////////////////////
char* gameToString(Game game);

#endif		// _SERVER_FUNCTIONS_H_
